package fr.unica.miage.pierson.codequest.data

/**
 * Source de données pour générer des séries de questions.
 *
 * Cette source utilise l'API OpenAI pour générer des questions dynamiquement.
 */
object QuestionSource {

    private lateinit var openAIService: OpenAIService

    /**
     * Initializes the OpenAIService.
     */
    fun initialize() {
        openAIService = OpenAIService()
    }

    /**
     * Retourne une série de questions associées à un quiz donné.
     *
     * @param idQuiz L'identifiant du quiz (correspond à sa position dans la liste).
     * @return Une liste de questions générées dynamiquement pour ce quiz.
     */
    fun getQuestionsForQuiz(idQuiz: Int): List<Question> {
        val quizzes = DataSource().loadQuizzes()
        val quiz = quizzes.getOrNull(idQuiz) ?: return emptyList()

        val generatedQuestions = openAIService.generateQuestions(quiz.title, 5) // Generate 5 questions
        return generatedQuestions.map { rawQuestion ->
            parseQuestion(rawQuestion)
        }
    }

    /**
     * Parses a raw question string into a `Question` object.
     *
     * @param rawQuestion The raw question string generated by OpenAI.
     * @return A `Question` object.
     */
    private fun parseQuestion(rawQuestion: String): Question {
        val lines = rawQuestion.split("\n").map { it.trim() }
        val codeSnippet = lines.takeWhile { it.isNotEmpty() && !it.startsWith("Question:") }.joinToString("\n")
        val questionText = lines.find { it.startsWith("Question:") }?.removePrefix("Question:")?.trim() ?: ""
        val options = lines.filter { it.matches(Regex("[A-D]\\. .*")) }.map { it.substringAfter(". ") }
        val correctAnswer = lines.find { it.startsWith("Correct answer:") }?.removePrefix("Correct answer:")?.trim()
        val correctAnswerIndex = correctAnswer?.let { "ABCD".indexOf(it[0]) } ?: -1

        return Question(
            codeSnippet = codeSnippet,
            questionText = questionText,
            options = options,
            correctAnswersIndexes = if (correctAnswerIndex != -1) listOf(correctAnswerIndex) else emptyList()
        )
    }
}